# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: run-test

on:
  push:
    branches: [ master ]
    tags:
      - "*"
  create:
    tags:
      - "*"
  pull_request:
    branches: [ master ]

    
jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: [ 3.6, 3.7, 3.8, 3.9 ]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install .[test]
    - name: Run all unit tests
      run: |
        coverage run -m pytest tests
    - name: Run all acceptance tests
      run: |
        coverage run -a -m unittest tests.acceptance
    - name: Upload coverage to Codecov.io
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        fail_ci_if_error: true
        verbose: true
    - name: Debug publish on Test PyPI
      env:
        PYPI_TEST_TOKEN: ${{ secrets.PYPI_TEST_TOKEN }}
        CODECOV: ${{ secrets.CODECOV_TOKEN }}
      run: |
        echo "TEST_VAR = '${PYPI_TEST_TOKEN}'"
        echo "CODECOV: $CODECOV"
        
      
  publish:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install .[test]
    - name: Build distribution
      run: |
        python setup.py sdist bdist_wheel
    - name: Publish on Test PyPI 
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_TEST_TOKEN }}
        TWINE_REPOSITORY_URL: "https://test.pypi.org/legacy/"
      run: |
        echo "$TWINE_PASSWORD"
        pip install twine
        twine check dist/*
        twine upload dist/*
    - name: Publish on PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        TWINE_REPOSITORY_URL: "https://upload.pypi.org/legacy/"
      run: |
        twine upload dist/*

          
